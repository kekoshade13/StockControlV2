// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockControl.Server.Data;

#nullable disable

namespace StockControl.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231008214342_AllDatabase")]
    partial class AllDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquiposSpareParts", b =>
                {
                    b.Property<int>("EquiposId_Equip")
                        .HasColumnType("int");

                    b.Property<int>("SparePartsId_Code")
                        .HasColumnType("int");

                    b.HasKey("EquiposId_Equip", "SparePartsId_Code");

                    b.HasIndex("SparePartsId_Code");

                    b.ToTable("EquiposSpareParts");
                });

            modelBuilder.Entity("StockControl.Shared.Models.Equipos", b =>
                {
                    b.Property<int>("Id_Equip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Equip"));

                    b.Property<string>("NameEquip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Equip");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("StockControl.Shared.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("StockControl.Shared.Models.Movements", b =>
                {
                    b.Property<int>("Id_Movement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Movement"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hour")
                        .HasColumnType("datetime2");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("SparePartsId_Code")
                        .HasColumnType("int");

                    b.Property<int>("TipoStockId_Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("TotalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_Movement");

                    b.HasIndex("SparePartsId_Code");

                    b.HasIndex("TipoStockId_Stock");

                    b.HasIndex("UserNameId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("StockControl.Shared.Models.Repuestos", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CI")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_u")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetProd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_User");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("StockControl.Shared.Models.SpareParts", b =>
                {
                    b.Property<int>("Id_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Code"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Code");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("StockControl.Shared.Models.TipoStock", b =>
                {
                    b.Property<int>("Id_Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Stock"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("NameStock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Stock");

                    b.ToTable("TipoStock");
                });

            modelBuilder.Entity("EquiposSpareParts", b =>
                {
                    b.HasOne("StockControl.Shared.Models.Equipos", null)
                        .WithMany()
                        .HasForeignKey("EquiposId_Equip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControl.Shared.Models.SpareParts", null)
                        .WithMany()
                        .HasForeignKey("SparePartsId_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StockControl.Shared.Models.Movements", b =>
                {
                    b.HasOne("StockControl.Shared.Models.SpareParts", "SpareParts")
                        .WithMany()
                        .HasForeignKey("SparePartsId_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControl.Shared.Models.TipoStock", "TipoStock")
                        .WithMany()
                        .HasForeignKey("TipoStockId_Stock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControl.Shared.Models.Identity.ApplicationUser", "UserName")
                        .WithMany()
                        .HasForeignKey("UserNameId");

                    b.Navigation("SpareParts");

                    b.Navigation("TipoStock");

                    b.Navigation("UserName");
                });
#pragma warning restore 612, 618
        }
    }
}
